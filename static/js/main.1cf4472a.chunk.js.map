{"version":3,"sources":["context/firebase.js","context/AuthContext.js","components/PrivateRoute.js","components/form.elements.js","components/UpdateProfile.js","components/Signin.js","components/Signup.js","components/ForgotPassword.js","components/Nav.elements.js","components/Nav.js","components/Tasks.elements.js","components/Tasks.js","components/Dashboard.js","components/App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Form","styled","form","StyledBtn","Button","LockIcon","Avatar","FormContainer","div","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","Container","maxWidth","CssBaseline","Typography","variant","Alert","severity","AlertTitle","onSubmit","e","preventDefault","current","promises","push","Promise","all","then","catch","finally","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","inputRef","defaultValue","type","placeholder","color","disabled","justifyContent","Signin","showPassword","setShowPassword","a","console","log","margin","autoFocus","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","message","setMessage","Heading","DisplayMail","p","AppBarWithBackground","AppBar","Nav","anchorEl","open","pushState","Toolbar","align","event","currentTarget","Menu","keepMounted","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","MenuItem","Link","AddTaskTextField","AddTaskContainer","AddTaskBtn","NoTasksHeading","h2","TaskTable","table","THead","thead","Tr","tr","TaskInfo","ActionBtn","DisplayTask","DisplayTaskDone","Tasks","dbRef","firestore","collection","fetchTasks","doc","uid","get","snapshot","data","docs","map","tasksFromServer","setTaskArray","getTasks","currentTask","setCurrentTask","taskArray","moment","format","selectedDate","setSelectedDate","addTask","flag","forEach","tasksRef","orderBy","limit","prevTasks","taskID","set","dummy","newTask","taskName","isDone","schedule","toString","doneTask","taskId","where","ref","update","element","UndoneTask","deleteTask","delete","filter","onChange","target","utils","MomentUtils","DateTimePicker","inputVariant","length","task","size","Dashboard","App","exact","path","UpdateProfile","ForgotPassword","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf4472a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nconst db = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\nexport const auth = db.auth()\r\nexport default db\r\n// export {db}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from './firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { useAuth } from \"../context/AuthContext\"\r\n\r\nexport default function PrivateRoute( {component : Component , ...rest}) {\r\n\r\n    const {currentUser} = useAuth()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n              return currentUser ? <Component {...props} /> : <Redirect to=\"/task-tracker/signin\" />\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  margin-top: 2vh;\r\n`\r\n\r\nexport const StyledBtn = styled(Button)`\r\n    &&& {\r\n    margin : 2vh 0;\r\n    }\r\n`\r\n\r\nexport const LockIcon = styled(Avatar)`\r\n&&& {\r\n    margin : 1vh;\r\n    background-color : #f50057;\r\n}\r\n`\r\n\r\nexport const FormContainer = styled.div`\r\n  margin-top: 8vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useRef, useState } from 'react';\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nimport { Form, StyledBtn , LockIcon,FormContainer } from './form.elements';\r\n\r\n\r\nexport default function Signup() {\r\n    \r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { currentUser, updatePassword, updateEmail } = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\");\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push(\"/task-tracker\")\r\n        }).catch(() => {\r\n            setError(\"Failed to update profile\")\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <FormContainer>\r\n                <LockIcon >\r\n                    <LockOutlinedIcon />\r\n                </LockIcon>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Update Profile\r\n                </Typography>\r\n                {error && <Alert severity=\"error\">\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    {error}\r\n                </Alert>}\r\n                <Form  onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={emailRef}\r\n                                defaultValue={currentUser.email}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={passwordRef}\r\n                                placeholder=\"leave blank to keep same\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"confirm-password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={passwordConfirmRef}\r\n                                placeholder=\"leave blank to keep same\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <StyledBtn\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                    >\r\n                        Update\r\n                    </StyledBtn>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/task-tracker\" variant=\"body2\">\r\n                                Cancel\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n            </FormContainer>\r\n\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { useRef, useState } from 'react';\r\nimport { InputAdornment, IconButton } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nimport { Form, StyledBtn , LockIcon,FormContainer } from './form.elements';\r\n\r\n\r\n\r\nexport default function Signin() {\r\n \r\n\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login } = useAuth();\r\n\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/task-tracker\")\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n      setError(\"Failed to log in\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <FormContainer>\r\n        <LockIcon >\r\n          <LockOutlinedIcon />\r\n        </LockIcon>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {error && <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          {error}\r\n        </Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            inputRef={emailRef}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={passwordRef}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n\r\n          />\r\n          <StyledBtn\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n          >\r\n            Sign In\r\n          </StyledBtn>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/task-tracker/forgot-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/task-tracker/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useRef, useState } from 'react';\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nimport { Form, StyledBtn , LockIcon,FormContainer } from './form.elements';\r\n\r\n\r\n\r\nexport default function Signup() {\r\n\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\");\r\n        }\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/task-tracker\")\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            setError(\"Failed to create an account\")\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <FormContainer>\r\n                <LockIcon>\r\n                    <LockOutlinedIcon />\r\n                </LockIcon>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                {error && <Alert severity=\"error\">\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    {error}\r\n                </Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={emailRef}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={passwordRef}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"confirm-password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={passwordConfirmRef}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <StyledBtn\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                    >\r\n                        Sign Up\r\n                    </StyledBtn>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/task-tracker/signin\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n            </FormContainer>\r\n\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { useRef, useState } from 'react';\r\nimport { Form, StyledBtn , LockIcon,FormContainer } from './form.elements';\r\n\r\n\r\n\r\nexport default function Signin() {\r\n  \r\n  const emailRef = useRef();\r\n  const {resetPassword } = useAuth();\r\n\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\")\r\n\r\n  async function handleSubmit(e) {\r\n      e.preventDefault();   \r\n      try {\r\n          setMessage(\"\")\r\n          setError(\"\")\r\n          setLoading(true)\r\n          await resetPassword(emailRef.current.value)\r\n          setMessage('check your inbox for further instructions')\r\n      \r\n      }\r\n      catch(e) {\r\n          console.log(e)\r\n          setError(\"Failed to reset Password\")\r\n      }\r\n      setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <FormContainer>\r\n        <LockIcon >\r\n          <LockOutlinedIcon />\r\n        </LockIcon>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Password\r\n        </Typography>\r\n        {error && <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          {error}\r\n        </Alert>}\r\n        {message && <Alert severity=\"success\">\r\n          <AlertTitle>Success</AlertTitle>\r\n          {message}\r\n         </Alert>   }\r\n        <Form  onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            inputRef={emailRef}\r\n          />\r\n        \r\n          <StyledBtn\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n          >\r\n            Reset Password\r\n          </StyledBtn>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/task-tracker/signin\" variant=\"body2\">\r\n                Sign In\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/task-tracker/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n}","import styled from 'styled-components';\r\nimport { Typography,AppBar } from '@material-ui/core';\r\n\r\n\r\n\r\nexport const Heading = styled(Typography)`\r\n  flex-grow : 1;\r\n`\r\n\r\nexport const DisplayMail = styled.p`\r\n    padding: 4%;\r\n`\r\nexport const AppBarWithBackground = styled(AppBar)`\r\n    background: #b80751;\r\n`","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { Toolbar, CssBaseline, IconButton, Menu, MenuItem } from '@material-ui/core'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nimport { Heading,DisplayMail,AppBarWithBackground } from './Nav.elements';\r\nexport default function Nav() {\r\n\r\n\r\n    const [anchorEl, open] = useState(null)\r\n\r\n    const handleMenu = (event) => {\r\n        open(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        open(null)\r\n    }\r\n\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n        try {\r\n            await logout()\r\n            history.pushState(\"/task-tracker/signin\")\r\n\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <CssBaseline />\r\n\r\n            <AppBarWithBackground\r\n                position=\"fixed\"\r\n                \r\n            >\r\n                <Toolbar >\r\n                    <Heading align=\"center\" variant=\"h6\" color=\"inherit\" >\r\n                        Task Tracker\r\n                    </Heading>\r\n                    <IconButton\r\n                        area-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                        onClick={handleMenu}\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        aria-controls=\"fade-menu\"\r\n                        keepMounted\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DisplayMail >Email : <strong> {currentUser.email} </strong></DisplayMail><hr></hr>\r\n                        <MenuItem component={Link} to=\"/task-tracker/update-profile\" >Update Profile</MenuItem>\r\n                        <MenuItem onClick={handleLogout}>Log Out</MenuItem>\r\n                    </Menu>\r\n                </Toolbar>\r\n\r\n            </AppBarWithBackground>\r\n            {error && <Alert severity=\"error\">\r\n                <AlertTitle>Error</AlertTitle>\r\n                {error}\r\n            </Alert>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nexport const AddTaskTextField = styled(TextField)`\r\n    width: 40vw;\r\n`\r\n\r\nexport const AddTaskContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2,auto);\r\n    margin-top: 15vh;\r\n    grid-gap : 2vw;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const AddTaskBtn = styled(Button)`\r\n    margin-left : 2vw;\r\n    grid-column: 1/3;\r\n`\r\nexport const NoTasksHeading = styled.h2`\r\n     color: #3f51b5;\r\n    text-align: center;\r\n    margin-top: 10vh;\r\n`\r\n\r\nexport const TaskTable = styled.table`\r\n    margin: 5vh auto;\r\n    border-collapse: collapse;\r\n    color: #3f51b5;\r\n    /* table-layout: fixed;\r\n    width: 100%; */\r\n`\r\n\r\nexport const THead = styled.thead`\r\n    border-bottom: solid 2px;\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n    border-bottom: solid 1px;\r\n`;\r\n\r\nexport const TaskInfo = styled.div`\r\n    max-width: 50vw;\r\n    word-wrap: break-word;\r\n`;\r\n\r\nexport const ActionBtn = styled(Button)`\r\n      margin: 0 1vw;\r\n`\r\nexport const DisplayTask = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const DisplayTaskDone = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\ncolor : #50C878;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport {\r\n    AddTaskTextField, AddTaskContainer, AddTaskBtn, NoTasksHeading, TaskTable, ActionBtn,\r\n    DisplayTask, DisplayTaskDone, THead, Tr, TaskInfo\r\n}\r\n    from './Tasks.elements';\r\nimport moment from 'moment';\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport db from '../context/firebase';\r\n\r\n\r\n\r\nexport default function Tasks() {\r\n\r\n    const dbRef = db.firestore().collection('users')\r\n    const fetchTasks = async () => {\r\n        const snapshot = await dbRef.doc(currentUser.uid).collection(\"tasks\").get()\r\n        const data = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getTasks = async() => {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTaskArray(tasksFromServer)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n\r\n  \r\n\r\n    const [currentTask, setCurrentTask] = useState(\"\")\r\n    const [taskArray, setTaskArray] = useState([])\r\n    const [selectedDate, setSelectedDate] = useState(moment().format(\"LLLL\"));\r\n\r\n    const handleDateChange = (e) => {\r\n        console.log(e)\r\n        setSelectedDate(moment(e).format(\"LLLL\"))\r\n    }\r\n\r\n    const handleTaskChange = (e) => {\r\n        setCurrentTask(e.target.value)\r\n    }\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    const addTask = async() => {\r\n        let flag = false,taskID;\r\n        const test = await dbRef.get()\r\n        test.docs.forEach(doc => {\r\n            if(doc.id === currentUser.uid){\r\n                flag = true\r\n            } \r\n        })\r\n\r\n        if(flag){\r\n            \r\n            const tasksRef = dbRef.doc(currentUser.uid).collection('tasks')\r\n            const prevTasks = await tasksRef.orderBy('id', 'desc').limit(1).get()\r\n            \r\n            if(prevTasks.docs[0]){\r\n            taskID = prevTasks.docs[0].data().id + 1\r\n            }\r\n            else{\r\n                taskID = 1\r\n            }       \r\n        }\r\n        else{\r\n            await dbRef.doc(currentUser.uid).set({dummy : 'dummy'})\r\n            taskID = 1\r\n        }\r\n        let newTask = {\r\n            id: taskID,\r\n            taskName: currentTask,\r\n            isDone: false,\r\n            schedule: selectedDate.toString()\r\n        }        \r\n        await dbRef.doc(currentUser.uid).collection('tasks').doc().set(newTask)\r\n\r\n        setTaskArray([...taskArray, newTask])\r\n        setCurrentTask(\"\")\r\n    }\r\n\r\n\r\n    const doneTask = async(taskId) => {\r\n        const taskToMarkAsDone =   (await dbRef.doc(currentUser.uid).collection(\"tasks\").where(\"id\",\"==\",taskId).get()).docs[0].ref\r\n        taskToMarkAsDone.update({\r\n            isDone : true\r\n        })\r\n\r\n        setTaskArray(taskArray.map(element => {\r\n            if (element.id === taskId) {\r\n                element.isDone = true\r\n            }\r\n            return element\r\n        }))\r\n\r\n    }\r\n\r\n    const UndoneTask = async(taskId) => {\r\n        const taskToMarkAsDone =   (await dbRef.doc(currentUser.uid).collection(\"tasks\").where(\"id\",\"==\",taskId).get()).docs[0].ref\r\n        taskToMarkAsDone.update({\r\n            isDone : false\r\n        })\r\n        setTaskArray(taskArray.map(element => {\r\n            if (element.id === taskId) {\r\n                element.isDone = false\r\n            }\r\n            return element\r\n        }))\r\n\r\n    }\r\n    const deleteTask = async(taskId) => {   \r\n        await (await dbRef.doc(currentUser.uid).collection(\"tasks\").where(\"id\",\"==\",taskId).get()).docs[0].ref.delete()\r\n        setTaskArray(taskArray.filter((element) => {\r\n            return element.id !== taskId\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddTaskContainer >\r\n                <AddTaskTextField\r\n                    label=\"Enter task here\"\r\n                    variant=\"filled\"\r\n                    value={currentTask}\r\n                    onChange={handleTaskChange}\r\n                />\r\n\r\n\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <DateTimePicker label=\"Schedule\"\r\n                        inputVariant=\"outlined\" value={selectedDate} onChange={handleDateChange} />\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <AddTaskBtn variant=\"contained\" color=\"primary\"\r\n                    onClick={addTask} disabled={currentTask === \"\"} >\r\n                    ADD\r\n                </AddTaskBtn>\r\n            </AddTaskContainer>\r\n            {taskArray.length > 0 ?\r\n                <TaskTable >\r\n                    <THead>\r\n                        <tr>\r\n                            <th>Task</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </THead>\r\n                    {\r\n                        taskArray.map((task) => {\r\n                            return (\r\n                                <tbody key={task.id}>\r\n                                    <Tr>\r\n                                        <td>\r\n                                            <TaskInfo>\r\n                                                {\r\n                                                    task.isDone ? (\r\n                                                        <DisplayTaskDone>\r\n                                                            <h3><s>{task.taskName}</s></h3>\r\n                                                            <p><s>{task.schedule}</s></p>\r\n                                                        </DisplayTaskDone>\r\n                                                    ) : (\r\n                                                        <DisplayTask>\r\n                                                            <h3>{task.taskName}</h3>\r\n                                                            <p>{task.schedule}</p>\r\n                                                        </DisplayTask>\r\n\r\n                                                    )}\r\n                                            </TaskInfo>\r\n                                        </td>\r\n                                        <td>\r\n                                            {\r\n                                                (\r\n                                                    <>\r\n                                                        {!task.isDone ? <ActionBtn\r\n                                                            variant=\"outlined\"\r\n                                                            color=\"default\"\r\n                                                            size=\"small\"\r\n                                                            onClick={() => doneTask(task.id)}\r\n                                                        >DONE</ActionBtn>\r\n                                                            : <ActionBtn\r\n                                                                variant=\"outlined\"\r\n                                                                color=\"default\"\r\n                                                                size=\"small\"\r\n                                                                onClick={() => UndoneTask(task.id)}\r\n                                                            >UNDONE</ActionBtn>\r\n                                                        }\r\n\r\n                                                        <ActionBtn\r\n                                                            variant=\"outlined\"\r\n                                                            color=\"secondary\"\r\n                                                            size=\"small\"\r\n                                                            onClick={() => deleteTask(task.id)}\r\n                                                        >DELETE</ActionBtn>\r\n                                                    </>\r\n                                                )\r\n\r\n                                            }\r\n                                        </td>\r\n                                    </Tr>\r\n\r\n                                </tbody>\r\n                            )\r\n                        })\r\n                    }\r\n                </TaskTable>\r\n                : <NoTasksHeading> NO TASKS TO DO </NoTasksHeading>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n","\r\nimport React from 'react'\r\nimport Nav from './Nav'\r\nimport Tasks from './Tasks'\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        < >\r\n            <Nav />\r\n            <Tasks />      \r\n        </>\r\n    )\r\n}\r\n","import React, { Fragment } from \"react\";\n// import {AuthProvider} from \"../context/AuthContext\"\nimport {AuthProvider} from \"../context/AuthContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport PrivateRoute from \"./PrivateRoute\";\nimport UpdateProfile from \"./UpdateProfile\";\nimport Signin from \"./Signin\";\nimport Signup from \"./Signup\";\nimport ForgotPassword from \"./ForgotPassword\"\nimport Dashboard from \"./Dashboard\";\n\nfunction App() {\n  return (\n    <>\n      <Fragment>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/task-tracker\" component={Dashboard} />\n              <PrivateRoute path=\"/task-tracker/update-profile\" component={UpdateProfile} />\n              <Route path=\"/task-tracker/signup\" component={Signup} />\n              <Route path=\"/task-tracker/signin\" component={Signin} />\n              <Route path=\"/task-tracker/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </Fragment>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}